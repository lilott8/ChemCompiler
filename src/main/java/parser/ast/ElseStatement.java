//
// Generated by JTB 1.3.2
//

package parser.ast;

import parser.visitor.*;

/**
 * Grammar production:
 * f0 -> <ELSE>
 * f1 -> <LBRACE>
 * f2 -> Statement()
 * f3 -> <RBRACE>
 */
public class ElseStatement implements Node {
   public NodeToken f0;
   public NodeToken f1;
   public Statement f2;
   public NodeToken f3;

   public ElseStatement(NodeToken n0, NodeToken n1, Statement n2, NodeToken n3) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
   }

   public ElseStatement(Statement n0) {
      f0 = new NodeToken("else");
      f1 = new NodeToken("{");
      f2 = n0;
      f3 = new NodeToken("}");
   }

   public void accept(Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

